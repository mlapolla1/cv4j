/*
 * Copyright (c) 2017-present, CV4J Contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.cv4j.core.datamodel.lut.warm;

/**
 * The filter which is varies smoothly from black through shades of red, orange, and yellow, to white.
 * <p>
 * For more information please see:
 * <a target="_blank" href="http://baike.baidu.com/link?url=kysXstK853g0mEbTgPIdkrqO5qTTbgfW-B0O1FJP4MYYzp
 * G5_6E_LlaP_6T9XTn2c97Ge6hJUojJzkppCdnO-mJxIee_XsNASTsy82RaQZe">About ColorMap</a> <p>
 * Or see:
 * <a target="_blank" href="http://matlab.izmiran.ru/help/techdoc/ref/colormap.html">MATLAB Function Reference - colormap</a>
 *
 */
public final class HotLUT {
    /**
     * List of hot lut
     */ 
    private static  final int[][] HOT_LUT = new int[][]{
            {0, 0, 0}, {1, 1, 0}, {4, 0, 0}, {6, 0, 0}, {9, 1, 0},
            {12, 0, 0}, {14, 0, 0}, {16, 0, 0}, {20, 0, 0}, {22, 1, 0},
            {24, 0, 0}, {28, 0, 0}, {30, 0, 0}, {32, 0, 1}, {35, 0, 0},
            {36, 0, 0}, {40, 0, 0}, {41, 1, 1}, {44, 0, 0}, {46, 0, 0},
            {49, 1, 1}, {52, 0, 2}, {54, 0, 0}, {56, 0, 0}, {60, 0, 0},
            {62, 1, 0}, {64, 0, 0}, {68, 0, 0}, {70, 0, 0}, {72, 0, 1},
            {75, 0, 0}, {76, 0, 0}, {80, 0, 0}, {81, 1, 0}, {84, 0, 0},
            {86, 0, 0}, {89, 1, 0}, {92, 0, 1}, {94, 0, 0}, {96, 0, 1},
            {100, 0, 0}, {103, 0, 1}, {104, 0, 0}, {108, 0, 0}, {110, 0, 0},
            {113, 1, 0}, {115, 0, 0}, {116, 0, 0}, {120, 0, 1}, {120, 0, 0},
            {124, 0, 0}, {126, 0, 1}, {129, 1, 0}, {132, 0, 0}, {134, 0, 0},
            {136, 0, 0}, {140, 0, 0}, {142, 0, 0}, {144, 0, 0}, {148, 0, 0},
            {150, 0, 0}, {152, 0, 0}, {155, 0, 0}, {156, 0, 1}, {160, 0, 0},
            {160, 0, 0}, {164, 0, 0}, {166, 1, 0}, {169, 1, 0}, {172, 0, 0},
            {174, 1, 0}, {176, 1, 0}, {180, 0, 0}, {182, 0, 0}, {184, 0, 0},
            {188, 0, 1}, {190, 0, 0}, {192, 0, 0}, {195, 0, 0}, {196, 0, 1},
            {200, 0, 0}, {200, 0, 0}, {204, 0, 0}, {206, 0, 0}, {209, 1, 0},
            {212, 0, 0}, {214, 0, 0}, {216, 1, 0}, {220, 0, 0}, {222, 0, 0},
            {224, 0, 1}, {228, 0, 1}, {230, 0, 2}, {232, 0, 0}, {235, 0, 0},
            {236, 0, 0}, {240, 0, 0}, {242, 0, 0}, {244, 0, 0}, {246, 0, 1},
            {250, 0, 1}, {250, 0, 1}, {254, 2, 1}, {255, 3, 0}, {254, 5, 1},
            {255, 8, 0}, {254, 10, 0}, {254, 14, 0}, {255, 15, 0}, {255, 18, 0},
            {255, 20, 0}, {255, 23, 0}, {255, 25, 1}, {254, 29, 0}, {255, 30, 0},
            {253, 33, 0}, {255, 35, 0}, {255, 39, 0}, {255, 40, 0}, {254, 43, 0},
            {255, 45, 0}, {254, 48, 0}, {255, 49, 0}, {254, 53, 0}, {255, 55, 1},
            {254, 58, 0}, {255, 59, 0}, {255, 63, 0}, {254, 65, 0}, {255, 68, 0},
            {254, 70, 0}, {255, 73, 0}, {255, 74, 0}, {255, 78, 0}, {255, 79, 1},
            {255, 83, 0}, {255, 84, 0}, {255, 88, 0}, {255, 89, 0}, {255, 93, 0},
            {255, 95, 0}, {255, 98, 1}, {255, 100, 0}, {255, 104, 1}, {255, 105, 0},
            {255, 109, 0}, {255, 111, 0}, {255, 113, 1}, {255, 115, 0}, {254, 119, 1},
            {255, 120, 2}, {255, 123, 0}, {255, 125, 1}, {255, 128, 0}, {255, 130, 1},
            {255, 133, 0}, {255, 135, 0}, {255, 137, 1}, {255, 140, 1}, {255, 142, 1},
            {255, 144, 0}, {255, 148, 0}, {255, 149, 0}, {255, 152, 0}, {255, 154, 0},
            {255, 158, 1}, {255, 159, 0}, {255, 161, 1}, {255, 164, 1}, {255, 166, 0},
            {255, 169, 2}, {254, 172, 0}, {255, 175, 0}, {253, 178, 0}, {255, 180, 0},
            {253, 183, 0}, {255, 185, 0}, {255, 187, 0}, {255, 190, 0}, {255, 192, 0},
            {255, 194, 1}, {255, 197, 1}, {255, 199, 1}, {255, 202, 0}, {255, 204, 0},
            {255, 207, 0}, {255, 210, 0}, {255, 212, 0}, {255, 214, 0}, {254, 218, 0},
            {255, 220, 0}, {255, 223, 0}, {254, 225, 1}, {254, 227, 0}, {254, 230, 0},
            {254, 232, 0}, {255, 234, 1}, {254, 237, 0}, {255, 239, 0}, {254, 242, 0},
            {255, 245, 0}, {253, 248, 0}, {255, 250, 1}, {255, 251, 2}, {254, 253, 5},
            {255, 254, 6}, {255, 255, 11}, {255, 255, 14}, {255, 255, 21}, {255, 255, 25},
            {255, 255, 30}, {255, 255, 33}, {255, 254, 40}, {255, 254, 45}, {255, 255, 51},
            {254, 255, 55}, {255, 255, 59}, {254, 255, 63}, {254, 255, 69}, {254, 255, 73},
            {255, 255, 81}, {255, 255, 85}, {254, 255, 89}, {255, 255, 93}, {254, 255, 101},
            {255, 255, 105}, {255, 255, 109}, {255, 255, 113}, {255, 255, 121}, {255, 255, 125},
            {255, 255, 131}, {255, 255, 135}, {255, 255, 139}, {255, 255, 143}, {254, 255, 149},
            {255, 255, 154}, {255, 255, 162}, {255, 255, 165}, {255, 255, 169}, {255, 255, 173},
            {254, 254, 180}, {255, 255, 185}, {255, 255, 190}, {255, 255, 193}, {255, 255, 201},
            {255, 254, 205}, {255, 255, 211}, {254, 255, 215}, {255, 255, 219}, {255, 255, 224},
            {253, 255, 229}, {254, 255, 234}, {254, 255, 241}, {255, 255, 245}, {254, 255, 249},
            {255, 255, 251}
    };

    public static int[][] getHotLut() {
        return HOT_LUT;
    }
}
